JVM运行时数据区域：
    1、程序计数器         -线程独享：保证每条线程状态切换后能正确执行
    2、虚拟机栈          -线程独享：为执行方法服务（局部常量，操作数栈，动态连接，出口）
    3、本地方法栈         -线程独享：为本地方法服务
    4、堆(GC堆)          -线程共享：对象、数组
    5、方法区            -线程共享：类型信息、常量（运行时常量池）、静态变量、即时编译器编译后的代码缓存等(内存回收目标主要针对常量池的回收和堆类型的卸载)
JVM回收算法：
    标记清除，引用计数，复制，标记整理，增量收集，分代


基础故障处理工具
1、jps:进程状态
    -v:显示jvm参数
2、jstat:统计信息监视工具
    jstat -gc(也可是其他参数) pid 毫秒数 次数      :表示每隔多少毫秒打印一次查询结果
3、jinfo:配置信息工具
    jinfo -flags 21371 查询这个进程得所有jvm参数
4、jmap:内存映像工具
        -dump:生成堆转储快照
        -heap：显示堆详细信息
5、jhat:堆转储快照分析工具(一般不用)

6、jstack:堆栈跟踪工具
        但是一般是用Tread.getAllStackTraces在代码获取，给前端展示，更方便

7、jconsole:可视化工具
        需要搭配jmx远程服务来使用
8、visualVM：多合-故障处理工具
        可视化，比jconsole更强大
9、Jprofiler:
    idea的插件，强大与visualVm

***面试问遇到什么性能问题：
启动慢，加载慢问题，性能低下
    1、看日志
    2、cpu占用（top）、内存(free)、磁盘I/O(iostat)、网络(iptraf)
    3、启动参数加上gc输出、打线程堆栈(jstack jmap)
    4、debug跟代码

