/**
 * @author:luojin
 * @apiNote:
 * @since: 2020-06-28 14:06
 */
public class NoteDemo {
    /*
       GC:回收算法
       1、引用计数法：
            一般不采用
       2、复制算法：
            发生在年轻代Minor GC   ,复制就要占用双重空间
       3、标记清除：发生在老年代，两次扫描，耗时严重；还会产生内存碎片
       4、标记压缩：发生在老年代，压缩移动对象，需要耗费资源
       5、标记清除压缩：标记后再清除，就不用移动对象了
     */

    /*
        Redis在项目中的使用场景：
        数据类型              使用场景
        ————————————————————————————————————————————————————
        String              封锁一个IP地址，Session等
        Hash                存储用户信息(减少序列化和反序列化消耗的I/O)
        List                实现最新消息的排行，可以利用List的push命令将任务存在list集合中，同时使用另一个命令将任务取出pop。redis-list数据类型来模拟消息队列，【电商的秒杀就可以模拟这种方式来完成一个秒杀活动】
        Set                 特殊之处：可以自动重排。比如说微博中将两个人的好友存在一个集合（Set）中。求两个人的共同好友操作，只需要求交集即可
        ZSet                以某一个条件为权重进行排序。京东：商品详情的时候都会有一个综合排名，还可以按照价格进行排名。
     */
}
