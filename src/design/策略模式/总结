1、分析项目变化与不变部分，提取变化部分，抽象化成接口+实现
接口：
public interface FlyBehavior{
}
public interface QuackBehavior{
}
好处：新增行为简单，行为类可以更好的复用，组合更方便。既有集成带来的复用好处，没有挖坑。

策略模式：分别封装行为接口，实现算法族，超类里放行接口对象，在子类里具体设定行为对象。
原则就是：分离变化部分，封装接口，基于接口编程各种功能。此模式让行为算法的变化独立于算法的使用者
2、多用组合少用集成；用行为类组合，而不是行为的继承。更有弹性

3、设计模式有没有相应的库直接使用？有些库或框架本身就用某些设计模式设计的

4、如果找不到适用的模式及怎么办？可能是分析的不到位